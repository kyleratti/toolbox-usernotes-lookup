name: CI/CD
on:
  push:
    branches: [main]
    paths:
      - "src/**"
      - "package.json"
      - "package-lock.json"
      - "webpack.config.js"
      - ".github/workflows/**"
  pull_request:
    branches: [main]
    paths:
      - "src/**"
      - "package.json"
      - "package-lock.json"
      - "webpack.config.js"
      - ".github/workflows/**"
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NODE_ENV: PRODUCTION
  REDDIT_APP_ID: ${{ secrets.REDDIT_APP_ID}}
  REDDIT_REDIRECT_URL: ${{ secrets.REDDIT_REDIRECT_URL}}
  APP_URL: ${{ secrets.APP_URL}}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Install 📥
        run: |
          npm install
      - name: Build 🔨
        run: |
          npm run build
      - name: Semantic release
        if: github.ref == 'refs/heads/master'
        run: npx semantic-release
      - name: Save build 📨
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: |
            dist/
            package.json
            package-lock.json
            webpack.config.js
      - name: Cache dependencies 💾
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
  prerender:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: [build]
    steps:
      - name: Cache dependencies 💾
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: Retrieve build 📨
        uses: actions/download-artifact@v2
        with:
          name: build
      - name: Prerender SPA 🔶➡️🔶
        run: |
          npm run predeploy
      - name: Save dist 📨
        uses: actions/upload-artifact@v2
        with:
          name: prerender
          path: |
            dist/
      - name: Clean up build artifacts 🧹
        uses: geekyeggo/delete-artifact@v1
        with:
          name: |
            build
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: [prerender]
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Retrieve dist 📨
        uses: actions/download-artifact@v2
        with:
          name: prerender
          path: dist/
      - name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: dist
          CLEAN: true
      - name: Clean up prerender artifacts 🧹
        uses: geekyeggo/delete-artifact@v1
        with:
          name: |
            prerender
